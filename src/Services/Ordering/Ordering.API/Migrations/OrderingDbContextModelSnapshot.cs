// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ordering.ReadModel;

namespace Ordering.API.Migrations
{
    [DbContext(typeof(OrderingDbContext))]
    partial class OrderingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EventFlow.EntityFramework.EventStores.EventEntity", b =>
                {
                    b.Property<long>("GlobalSequenceNumber")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AggregateId");

                    b.Property<string>("AggregateName");

                    b.Property<int>("AggregateSequenceNumber");

                    b.Property<Guid>("BatchId");

                    b.Property<string>("Data");

                    b.Property<string>("Metadata");

                    b.HasKey("GlobalSequenceNumber");

                    b.HasIndex("AggregateId", "AggregateSequenceNumber")
                        .IsUnique()
                        .HasFilter("[AggregateId] IS NOT NULL");

                    b.ToTable("EventEntity");
                });

            modelBuilder.Entity("EventFlow.EntityFramework.SnapshotStores.SnapshotEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AggregateId");

                    b.Property<string>("AggregateName");

                    b.Property<int>("AggregateSequenceNumber");

                    b.Property<string>("Data");

                    b.Property<string>("Metadata");

                    b.HasKey("Id");

                    b.HasIndex("AggregateName", "AggregateId", "AggregateSequenceNumber")
                        .IsUnique()
                        .HasFilter("[AggregateName] IS NOT NULL AND [AggregateId] IS NOT NULL");

                    b.ToTable("SnapshotEntity");
                });

            modelBuilder.Entity("Ordering.ReadModel.Model.OrderItemReadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrderReadModelOrderId");

                    b.Property<string>("PictureUrl");

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("UnitPrice");

                    b.Property<int>("Units");

                    b.HasKey("Id");

                    b.HasIndex("OrderReadModelOrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Ordering.ReadModel.Model.OrderReadModel", b =>
                {
                    b.Property<string>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BuyerIdentityGuid");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status");

                    b.Property<string>("Street");

                    b.Property<decimal>("Total");

                    b.Property<string>("ZipCode");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Ordering.ReadModel.Model.OrderSummaryReadModel", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Status");

                    b.Property<decimal>("Total");

                    b.HasKey("OrderNumber");

                    b.ToTable("OrderSummaries");
                });

            modelBuilder.Entity("Ordering.ReadModel.Model.OrderItemReadModel", b =>
                {
                    b.HasOne("Ordering.ReadModel.Model.OrderReadModel")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderReadModelOrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
